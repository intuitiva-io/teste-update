name: PlatformIO CI

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Build PlatformIO Project
        run: pio run

      - name: Check if bodyRelease.md exists
        id: check_file
        run: |
          if [[ -f "bodyRelease.md" ]]; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Upload build artifact firmware.bin
        uses: actions/upload-artifact@v2
        if: steps.check_file.outputs.exists == 'true'
        with:
          path: bodyRelease.md
          
      - name: Upload build artifact firmware.bin
        uses: actions/upload-artifact@v2
        with:
          path: .pio/build/nodemcu-32s/firmware.bin

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Get latest tag
        id: latest_tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Checkout repository release
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}-releases
          token: ${{ secrets.GH_TOKEN }}
          ref: main

      - name: create tag
        run: |
          git tag ${{ env.tag }}
          git push origin ${{ env.tag }}
          
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: ls
        run: ls -la artifact
      
      - name: check file
        run: |
          file artifact/bodyRelease.md
          file artifact/firmware.bin

      - name: Check if bodyRelease.md exists
        id: check_file
        run: |
          if [[ -f "bodyRelease.md" ]]; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          owner: intuitiva-io
          repo: ${{ github.repository }}-releases
          tag_name: ${{ env.tag }}
          release_name: Release ${{ env.tag }}
          commitish: main
          body_path: artifact/bodyRelease.md
          body: teste

      - name: Upload Release Asset
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url}}
          asset_path: artifact/firmware.bin
          asset_name: firmware.bin
          asset_content_type: application/octet-stream
